generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  favorites     Favorite[]
  itemCarts     ItemCart[]
  carts Cart[]
}

model Category {
  id        String   @id @default(cuid())
  name      String
  imageUrl  String
  products Product[]
  brand Brand[]
}

model Brand {
  id        String   @id @default(cuid())
  name      String
  imageUrl  String
  products  Product[]
  category Category[]
}

model Product {
  id            String      @id @default(cuid())
  name          String
  imageUrl      String
  price         Float
  description   String
  category      Category    @relation(fields: [categoryId], references: [id])
  categoryId    String
  brand         Brand       @relation(fields: [brandId], references: [id])
  brandId       String
  installment   Installment @relation(fields: [installmentId], references: [id])
  installmentId String
  favorites     Favorite[]
  itemCarts     ItemCart[]
  orderProduct  OrderProduct[]
}

model Installment {
  id        String   @id @default(cuid())
  number  Int
  interestRate     Float
  products  Product[]
}

model Favorite {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@unique([userId, productId])
}

model ItemCart {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  carts Cart[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@unique([userId, productId])
}

model Cart {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  items     ItemCart[]
  concluded Boolean   @default(false)
  concludedAt DateTime? @updatedAt
  orderProduct OrderProduct[]
}

model OrderProduct {
  cart      Cart      @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product   @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  createdAt DateTime  @default(now())

    @@id([cartId, productId]) 

}


